{"ast":null,"code":"var _jsxFileName = \"/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Main.module.scss';\nimport { Snow } from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport { CITIES } from \"../const/const\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst Main = () => {\n  _s();\n  const [town, setTown] = useState(CITIES[0]);\n  const [temp, setTemp] = useState(0);\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [day, setDay] = useState(0);\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        // setLat(position.coords.latitude)\n        // setLng(position.coords.longitude);\n      });\n    }\n  }\n  async function fetchWeather() {\n    let res = await fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${town.lat}&lon=${town.lon}&units=metric&cnt=4&appid=c065f555d4e19864fdc27e420f758663`);\n    let w = await res.json();\n    const {\n      list\n    } = w;\n    const today = list[0];\n    setTemp(Math.round(today.main.temp));\n    setDescription(today.weather[0].description);\n    let zone = w.city.timezone;\n    let date = new Date(today.dt * 1000 - zone * 1000);\n    let day = date.getDay();\n    setDate(date.toLocaleDateString(\"en-US\"));\n    setDay(days[day]);\n    console.log('time = ', date.getDay());\n    console.log('res', w);\n  }\n  useEffect(() => {\n    // if (navigator.geolocation) {\n    //     // Передаем две функции\n    //     navigator.geolocation.getCurrentPosition((position) => {\n    //         setLat(position.coords.longitude);\n    //         setLng(position.coords.longitude);\n    //     }, geolocationFailure);\n    //\n    //     // Выводим результат\n    //     result.innerHTML = \"Поиск начался\";\n    // }\n    // else {\n    //     // Выводим результат\n    //     result.innerHTML = \"Ваш браузер не поддерживает геолокацию\";\n    // }\n  }, []);\n  useEffect(() => {\n    fetchWeather();\n    window.onload = function () {\n      getLocation();\n    };\n  }, [town]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'h-screen flex',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container px-4 mx-auto pt-5',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex gap-4',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[0]),\n          children: \"Minsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[1]),\n          children: \"Moscow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[2]),\n          children: \"Bratislava\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.block,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.city,\n          children: \"MINSK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.image,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Snow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.degree,\n          children: [temp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.block,\n        children: [/*#__PURE__*/_jsxDEV(DayWeather, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DayWeather, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DayWeather, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"6p9WmIK1l+J3g+PhMB78Z/T5mrQ=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","styles","Snow","DayWeather","Button","CITIES","month","days","Main","town","setTown","temp","setTemp","description","setDescription","date","setDate","day","setDay","getLocation","navigator","geolocation","getCurrentPosition","position","fetchWeather","res","fetch","lat","lon","w","json","list","today","Math","round","main","weather","zone","city","timezone","Date","dt","getDay","toLocaleDateString","console","log","window","onload","block","info","image","degree"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './Main.module.scss';\nimport {Snow} from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport {CITIES} from \"../const/const\";\nconst month= [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\n    \"August\",\"September\",\"October\",\"November\",\"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nconst Main = () => {\n    const [town, setTown] = useState(CITIES[0]);\n    const [temp, setTemp] = useState(0);\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState('')\n    const [day, setDay] = useState(0);\n\n\n    function getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                // setLat(position.coords.latitude)\n                // setLng(position.coords.longitude);\n            })\n        }\n    }\n\n    async function fetchWeather() {\n\n\n        let res = await fetch(`http://api.openweathermap.org/data/2.5/forecast?lat=${town.lat}&lon=${town.lon}&units=metric&cnt=4&appid=c065f555d4e19864fdc27e420f758663`);\n        let w = await res.json();\n        const {list} = w;\n        const today = list[0];\n        setTemp(Math.round(today.main.temp));\n        setDescription(today.weather[0].description);\n        let zone = w.city.timezone;\n        let date = new Date(today.dt*1000-(zone*1000))\n        let day = date.getDay();\n        setDate(date.toLocaleDateString(\"en-US\"))\n        setDay(days[day]);\n        console.log('time = ',date.getDay())\n        console.log('res', w)\n\n    }\n\n    useEffect(() => {\n        // if (navigator.geolocation) {\n        //     // Передаем две функции\n        //     navigator.geolocation.getCurrentPosition((position) => {\n        //         setLat(position.coords.longitude);\n        //         setLng(position.coords.longitude);\n        //     }, geolocationFailure);\n        //\n        //     // Выводим результат\n        //     result.innerHTML = \"Поиск начался\";\n        // }\n        // else {\n        //     // Выводим результат\n        //     result.innerHTML = \"Ваш браузер не поддерживает геолокацию\";\n        // }\n    }, [])\n\n    useEffect(()=> {\n        fetchWeather();\n        window.onload = function() {\n            getLocation();\n        }\n    },[town])\n\n    return (\n        <div className={'h-screen flex'}>\n            <div className={'container px-4 mx-auto pt-5'}>\n                <div className={'flex gap-4'}>\n                    <Button onClick={()=>setTown(CITIES[0])}>\n                        Minsk\n                    </Button>\n                    <Button onClick={()=>setTown(CITIES[1])}>\n                        Moscow\n                    </Button>\n                    <Button onClick={()=>setTown(CITIES[2])}>\n                        Bratislava\n                    </Button>\n                </div>\n                <div className={styles.block}>\n                    <div className={styles.city}>\n                        MINSK\n                    </div>\n                    <div className={styles.info}>\n                        <p>{day}</p>\n                        <p>{date}</p>\n                    </div>\n                    <div className={styles.image}>\n                        <div>\n                            <Snow/>\n                        </div>\n                        <p>{description}</p>\n                    </div>\n                    <div className={styles.degree}>\n                        {temp}°\n                    </div>\n                </div>\n                <div className={styles.block}>\n                    <DayWeather/>\n                    <DayWeather/>\n                    <DayWeather/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}