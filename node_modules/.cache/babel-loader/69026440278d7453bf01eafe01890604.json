{"ast":null,"code":"const API_KEY = 'c065f555d4e19864fdc27e420f758663';\nconst URL_API = 'https://api.openweathermap.org/data/2.5/';\nexport function getWeather(type, searchParams) {\n  const url = new URL(`${URL_API}/${type}`);\n  const params = new URLSearchParams({\n    ...searchParams,\n    appid: API_KEY\n  });\n  url.search = params.toString();\n  return fetch(url).then(res => res.json());\n}\nfunction formatCurrentWeather(data) {\n  console.log('data ', data);\n  const {\n    lat,\n    lon,\n    current: {\n      temp,\n      dt,\n      feels_like\n    },\n    // main: { temp, feels_like, temp_min, temp_max, humidity },\n    name,\n    // sys: { country, sunrise, sunset },\n    weather,\n    wind: {\n      speed\n    },\n    timezone\n  } = data;\n\n  // console.log('weather[0]', weather[0])\n  const {\n    main: details,\n    icon,\n    description\n  } = weather[0];\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed,\n    description,\n    date: getTime(timeToLocal(dt, timezone))\n  };\n}\nexport async function getFormattedDataWeather(searchParams) {\n  const formattedCurrentWeather = await getWeather(\"onecall\", searchParams).then(formatCurrentWeather);\n  // getForecastWeather(searchParams)\n\n  // console.log('formatted', formattedCurrentWeather)\n\n  return {\n    formattedCurrentWeather\n  };\n}\nexport async function getForecastWeather(searchParams) {\n  const dataForecast = await getWeather(\"onecall\", searchParams);\n\n  // console.log('data forecast', dataForecast)\n}\n\nexport function timeToLocal(sec, timezone) {\n  return new Date(sec * 1000 + timezone * 1000).toUTCString();\n}\nfunction getTime(date) {\n  const localeDate = new Date(date);\n  const day = localeDate.toLocaleDateString(\"en-GB\", {\n    weekday: 'long'\n  });\n  return {\n    day,\n    date: localeDate.toLocaleDateString(\"en-GB\")\n  };\n}","map":{"version":3,"names":["API_KEY","URL_API","getWeather","type","searchParams","url","URL","params","URLSearchParams","appid","search","toString","fetch","then","res","json","formatCurrentWeather","data","console","log","lat","lon","current","temp","dt","feels_like","name","weather","wind","speed","timezone","main","details","icon","description","country","sunrise","sunset","date","getTime","timeToLocal","getFormattedDataWeather","formattedCurrentWeather","getForecastWeather","dataForecast","sec","Date","toUTCString","localeDate","day","toLocaleDateString","weekday"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/weather.js"],"sourcesContent":["const API_KEY = 'c065f555d4e19864fdc27e420f758663';\nconst URL_API = 'https://api.openweathermap.org/data/2.5/';\n\nexport function getWeather(type, searchParams) {\n    const url = new URL(`${URL_API}/${type}`);\n    const params = new URLSearchParams({ ...searchParams, appid: API_KEY });\n    url.search = params.toString();\n\n    return fetch(url).then((res) => res.json());\n}\n\nfunction formatCurrentWeather(data) {\n\n    console.log('data ', data)\n    const {\n        lat,\n        lon,\n        current: {temp, dt, feels_like},\n        // main: { temp, feels_like, temp_min, temp_max, humidity },\n        name,\n        // sys: { country, sunrise, sunset },\n        weather,\n        wind: { speed },\n        timezone\n    } = data;\n\n    // console.log('weather[0]', weather[0])\n    const { main: details, icon, description } = weather[0];\n\n    return {\n        lat,\n        lon,\n        temp,\n        feels_like,\n        name,\n        dt,\n        country,\n        sunrise,\n        sunset,\n        details,\n        icon,\n        speed,\n        description,\n        date: getTime(timeToLocal(dt, timezone))\n    };\n}\nexport async function getFormattedDataWeather(searchParams) {\n    const formattedCurrentWeather = await getWeather(\n        \"onecall\",\n        searchParams\n    ).then(formatCurrentWeather);\n    // getForecastWeather(searchParams)\n\n    // console.log('formatted', formattedCurrentWeather)\n\n    return ({\n        formattedCurrentWeather\n    })\n}\n\nexport async function getForecastWeather(searchParams) {\n    const dataForecast = await getWeather(\"onecall\", searchParams);\n\n    // console.log('data forecast', dataForecast)\n}\n\nexport function timeToLocal(sec, timezone) {\n    return (new Date(sec*1000+(timezone*1000)).toUTCString())\n}\n\nfunction getTime(date) {\n    const localeDate = new Date(date);\n    const  day = localeDate.toLocaleDateString(\"en-GB\", {\n        weekday: 'long'\n    })\n\n    return ({\n        day,\n        date: localeDate.toLocaleDateString(\"en-GB\")\n    })\n\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,OAAO,GAAG,0CAA0C;AAE1D,OAAO,SAASC,UAAU,CAACC,IAAI,EAAEC,YAAY,EAAE;EAC3C,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAE,GAAEL,OAAQ,IAAGE,IAAK,EAAC,CAAC;EACzC,MAAMI,MAAM,GAAG,IAAIC,eAAe,CAAC;IAAE,GAAGJ,YAAY;IAAEK,KAAK,EAAET;EAAQ,CAAC,CAAC;EACvEK,GAAG,CAACK,MAAM,GAAGH,MAAM,CAACI,QAAQ,EAAE;EAE9B,OAAOC,KAAK,CAACP,GAAG,CAAC,CAACQ,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC/C;AAEA,SAASC,oBAAoB,CAACC,IAAI,EAAE;EAEhCC,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,IAAI,CAAC;EAC1B,MAAM;IACFG,GAAG;IACHC,GAAG;IACHC,OAAO,EAAE;MAACC,IAAI;MAAEC,EAAE;MAAEC;IAAU,CAAC;IAC/B;IACAC,IAAI;IACJ;IACAC,OAAO;IACPC,IAAI,EAAE;MAAEC;IAAM,CAAC;IACfC;EACJ,CAAC,GAAGb,IAAI;;EAER;EACA,MAAM;IAAEc,IAAI,EAAEC,OAAO;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAGP,OAAO,CAAC,CAAC,CAAC;EAEvD,OAAO;IACHP,GAAG;IACHC,GAAG;IACHE,IAAI;IACJE,UAAU;IACVC,IAAI;IACJF,EAAE;IACFW,OAAO;IACPC,OAAO;IACPC,MAAM;IACNL,OAAO;IACPC,IAAI;IACJJ,KAAK;IACLK,WAAW;IACXI,IAAI,EAAEC,OAAO,CAACC,WAAW,CAAChB,EAAE,EAAEM,QAAQ,CAAC;EAC3C,CAAC;AACL;AACA,OAAO,eAAeW,uBAAuB,CAACrC,YAAY,EAAE;EACxD,MAAMsC,uBAAuB,GAAG,MAAMxC,UAAU,CAC5C,SAAS,EACTE,YAAY,CACf,CAACS,IAAI,CAACG,oBAAoB,CAAC;EAC5B;;EAEA;;EAEA,OAAQ;IACJ0B;EACJ,CAAC;AACL;AAEA,OAAO,eAAeC,kBAAkB,CAACvC,YAAY,EAAE;EACnD,MAAMwC,YAAY,GAAG,MAAM1C,UAAU,CAAC,SAAS,EAAEE,YAAY,CAAC;;EAE9D;AACJ;;AAEA,OAAO,SAASoC,WAAW,CAACK,GAAG,EAAEf,QAAQ,EAAE;EACvC,OAAQ,IAAIgB,IAAI,CAACD,GAAG,GAAC,IAAI,GAAEf,QAAQ,GAAC,IAAK,CAAC,CAACiB,WAAW,EAAE;AAC5D;AAEA,SAASR,OAAO,CAACD,IAAI,EAAE;EACnB,MAAMU,UAAU,GAAG,IAAIF,IAAI,CAACR,IAAI,CAAC;EACjC,MAAOW,GAAG,GAAGD,UAAU,CAACE,kBAAkB,CAAC,OAAO,EAAE;IAChDC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,OAAQ;IACJF,GAAG;IACHX,IAAI,EAAEU,UAAU,CAACE,kBAAkB,CAAC,OAAO;EAC/C,CAAC;AAEL"},"metadata":{},"sourceType":"module"}