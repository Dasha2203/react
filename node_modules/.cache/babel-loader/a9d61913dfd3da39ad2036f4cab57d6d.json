{"ast":null,"code":"var _jsxFileName = \"/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport styles from './Main.module.scss';\nimport { Snow } from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport { CITIES } from \"../const/const\";\nimport { getFormattedDataWeather, getWeather } from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport Block from \"../components/Block/Block\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst Main = () => {\n  _s();\n  const {\n    weather,\n    fetchWeather,\n    dailyWeather\n  } = useContext(Context);\n  const [town, setTown] = useState(JSON.parse(localStorage.getItem('town')) || CITIES[0]);\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        if (!localStorage.getItem('town')) {\n          setTown({\n            lat: position.coords.latitude,\n            lon: position.coords.longitude\n          });\n        }\n      });\n    }\n  }\n  useEffect(() => {\n    if (!town) return;\n    localStorage.setItem('town', JSON.stringify(town));\n  }, [town]);\n  useEffect(() => {\n    if (!town) return;\n    fetchWeather(town.lat, town.lon);\n    window.onload = function () {\n      getLocation();\n    };\n  }, [town]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'h-screen flex',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container px-4 mx-auto pt-5',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex gap-1 sm:gap-4',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          active: town.name === 'Minsk',\n          onClick: () => setTown(CITIES[0]),\n          children: \"Minsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: town.name === 'Moscow',\n          onClick: () => setTown(CITIES[1]),\n          children: \"Moscow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: town.name === 'Bratislava',\n          onClick: () => setTown(CITIES[2]),\n          children: \"Bratislava\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: '/details',\n          className: 'text-white underline ml-auto py-2 px-3',\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), weather && /*#__PURE__*/_jsxDEV(Block, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.city,\n          children: weather.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: weather.date.dayLong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weather.date.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.image,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'h-24 sm:mb-5',\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: 'fill-white h-full',\n              name: weather.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.degree,\n          children: [Math.round(weather.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this), dailyWeather && /*#__PURE__*/_jsxDEV(Block, {\n        children: dailyWeather.map((item, i) => /*#__PURE__*/_jsxDEV(DayWeather, {\n          day: item.date.dayShort,\n          className: 'w-1/4',\n          temp: item.temp,\n          icon: item.icon\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"lusKc9bTmXjBBVHJ31ZVvCW1GIo=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useContext","useEffect","useState","styles","Snow","DayWeather","Button","CITIES","getFormattedDataWeather","getWeather","Icon","Link","Context","Block","month","days","Main","weather","fetchWeather","dailyWeather","town","setTown","JSON","parse","localStorage","getItem","getLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","setItem","stringify","window","onload","name","city","info","date","dayLong","image","icon","description","degree","Math","round","temp","map","item","i","dayShort"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport styles from './Main.module.scss';\nimport {Snow} from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport {CITIES} from \"../const/const\";\nimport {getFormattedDataWeather, getWeather} from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\nimport {Link} from \"react-router-dom\";\nimport {Context} from \"../context\";\nimport Block from \"../components/Block/Block\";\n\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nconst Main = () => {\n    const {weather, fetchWeather, dailyWeather} = useContext(Context);\n    const [town, setTown] = useState(JSON.parse(localStorage.getItem('town')) || CITIES[0]);\n\n    function getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                if (!localStorage.getItem('town')) {\n                    setTown({lat: position.coords.latitude, lon: position.coords.longitude})\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (!town) return;\n\n        localStorage.setItem('town', JSON.stringify(town));\n    }, [town])\n\n\n    useEffect(() => {\n        if (!town) return;\n        fetchWeather(town.lat, town.lon);\n\n        window.onload = function () {\n            getLocation();\n        }\n    }, [town])\n\n    return (\n        <div className={'h-screen flex'}>\n            <div className={'container px-4 mx-auto pt-5'}>\n                <div className={'flex gap-1 sm:gap-4'}>\n                    <Button active={town.name === 'Minsk'} onClick={() => setTown(CITIES[0])}>\n                        Minsk\n                    </Button>\n                    <Button active={town.name === 'Moscow'} onClick={() => setTown(CITIES[1])}>\n                        Moscow\n                    </Button>\n                    <Button active={town.name === 'Bratislava'} onClick={() => setTown(CITIES[2])}>\n                        Bratislava\n                    </Button>\n                    <Link to={'/details'} className={'text-white underline ml-auto py-2 px-3'}>Details</Link>\n                </div>\n                {\n                    weather && (\n                        <Block>\n                            <div className={styles.city}>\n                                {weather.city}\n                            </div>\n                            <div className={styles.info}>\n                                <p>{weather.date.dayLong}</p>\n                                <p>{weather.date.date}</p>\n                            </div>\n                            <div className={styles.image}>\n                                <div className={'h-24 sm:mb-5'}>\n                                    <Icon className={'fill-white h-full'} name={weather.icon}/>\n                                </div>\n                                <p>{weather.description}</p>\n                            </div>\n                            <div className={styles.degree}>\n                                {Math.round(weather.temp)}°\n                            </div>\n                        </Block>\n                    )\n                }\n\n                {dailyWeather && (\n                    <Block>\n                        {\n                            dailyWeather.map((item, i) => (\n                                <DayWeather\n                                    day={item.date.dayShort}\n                                    className={'w-1/4'}\n                                    temp={item.temp}\n                                    icon={item.icon}\n                                    key={i}\n                                />\n                            ))\n                        }\n                    </Block>)}\n            </div>\n        </div>\n    );\n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}