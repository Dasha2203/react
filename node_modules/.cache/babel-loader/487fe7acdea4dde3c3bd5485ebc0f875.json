{"ast":null,"code":"var _jsxFileName = \"/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport styles from './Main.module.scss';\nimport { Snow } from \"../assets/icons\";\nimport WeatherItem from \"../components/WeatherItem/WeatherItem\";\nimport Button from \"../components/Button/Button\";\nimport { CITIES } from \"../const/const\";\nimport { getFormattedDataWeather, getWeather } from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\nimport { Link } from \"react-router-dom\";\nimport { Context } from \"../context\";\nimport Block from \"../components/Block/Block\";\nimport CustomLink from \"../components/Link/Link\";\nimport Loader from \"../components/Loader/Loader\";\nimport WeatherInfo from \"../components/WeatherInfo/WeatherInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst Main = () => {\n  _s();\n  const {\n    loader,\n    weather,\n    fetchWeather,\n    dailyWeather\n  } = useContext(Context);\n  const [town, setTown] = useState(JSON.parse(localStorage.getItem('town')) || CITIES[0]);\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        if (!localStorage.getItem('town')) {\n          setTown({\n            lat: position.coords.latitude,\n            lon: position.coords.longitude\n          });\n        }\n      });\n    }\n  }\n  useEffect(() => {\n    if (!town) return;\n    localStorage.setItem('town', JSON.stringify(town));\n  }, [town]);\n  useEffect(() => {\n    if (!town) return;\n    fetchWeather({\n      lat: town.lat,\n      lon: town.lon\n    });\n    window.onload = function () {\n      getLocation();\n    };\n  }, [town]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'min-h-screen flex',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container px-4 mx-auto pt-5',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex gap-1 sm:gap-4',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          active: town.name === 'Minsk',\n          onClick: () => setTown(CITIES[0]),\n          children: \"Minsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: town.name === 'Moscow',\n          onClick: () => setTown(CITIES[1]),\n          children: \"Moscow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          active: town.name === 'Bratislava',\n          onClick: () => setTown(CITIES[2]),\n          children: \"Bratislava\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomLink, {\n          to: '/details',\n          children: \"Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), loader && /*#__PURE__*/_jsxDEV(Loader, {\n        className: 'mt-3 w-20 h-20 stroke-white mx-auto'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }, this), weather && !loader && /*#__PURE__*/_jsxDEV(WeatherInfo, {\n        weather: weather\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 40\n      }, this), !loader && dailyWeather && /*#__PURE__*/_jsxDEV(Block, {\n        children: dailyWeather.map((item, i) => /*#__PURE__*/_jsxDEV(WeatherItem, {\n          day: item.date.dayShort,\n          className: 'w-1/4',\n          temp: item.temp,\n          icon: item.icon\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"C2Fs5tGcwERjCsIFaxntIZHu4rc=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useContext","useEffect","useState","styles","Snow","WeatherItem","Button","CITIES","getFormattedDataWeather","getWeather","Icon","Link","Context","Block","CustomLink","Loader","WeatherInfo","month","days","Main","loader","weather","fetchWeather","dailyWeather","town","setTown","JSON","parse","localStorage","getItem","getLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","setItem","stringify","window","onload","name","map","item","i","date","dayShort","temp","icon"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx"],"sourcesContent":["import React, {useContext, useEffect, useState} from 'react';\nimport styles from './Main.module.scss';\nimport {Snow} from \"../assets/icons\";\nimport WeatherItem from \"../components/WeatherItem/WeatherItem\";\nimport Button from \"../components/Button/Button\";\nimport {CITIES} from \"../const/const\";\nimport {getFormattedDataWeather, getWeather} from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\nimport {Link} from \"react-router-dom\";\nimport {Context} from \"../context\";\nimport Block from \"../components/Block/Block\";\nimport CustomLink from \"../components/Link/Link\";\nimport Loader from \"../components/Loader/Loader\";\nimport WeatherInfo from \"../components/WeatherInfo/WeatherInfo\";\n\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nconst Main = () => {\n    const {loader, weather, fetchWeather, dailyWeather} = useContext(Context);\n    const [town, setTown] = useState(JSON.parse(localStorage.getItem('town')) || CITIES[0]);\n\n    function getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                if (!localStorage.getItem('town')) {\n                    setTown({lat: position.coords.latitude, lon: position.coords.longitude})\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (!town) return;\n\n        localStorage.setItem('town', JSON.stringify(town));\n    }, [town])\n\n\n    useEffect(() => {\n        if (!town) return;\n        fetchWeather({lat: town.lat, lon: town.lon});\n\n        window.onload = function () {\n            getLocation();\n        }\n    }, [town])\n\n    return (\n        <div className={'min-h-screen flex'}>\n            <div className={'container px-4 mx-auto pt-5'}>\n\n                <div className={'flex gap-1 sm:gap-4'}>\n                    <Button active={town.name === 'Minsk'} onClick={() => setTown(CITIES[0])}>\n                        Minsk\n                    </Button>\n                    <Button active={town.name === 'Moscow'} onClick={() => setTown(CITIES[1])}>\n                        Moscow\n                    </Button>\n                    <Button active={town.name === 'Bratislava'} onClick={() => setTown(CITIES[2])}>\n                        Bratislava\n                    </Button>\n                    <CustomLink to={'/details'}>Details</CustomLink>\n                </div>\n\n                {loader && (<Loader className={'mt-3 w-20 h-20 stroke-white mx-auto'}/>)}\n\n                {weather && !loader && <WeatherInfo weather={weather}/>}\n\n                {!loader && dailyWeather && (\n                    <Block>\n                        {\n                            dailyWeather.map((item, i) => (\n                                <WeatherItem\n                                    day={item.date.dayShort}\n                                    className={'w-1/4'}\n                                    temp={item.temp}\n                                    icon={item.icon}\n                                    key={i}\n                                />\n                            ))\n                        }\n                    </Block>)}\n\n            </div>\n        </div>\n    );\n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}