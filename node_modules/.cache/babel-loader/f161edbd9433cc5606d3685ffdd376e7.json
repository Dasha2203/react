{"ast":null,"code":"const API_KEY = 'c065f555d4e19864fdc27e420f758663';\nconst URL_API = 'https://api.openweathermap.org/data/2.5/';\nexport function getWeather(type, searchParams) {\n  const url = new URL(`${URL_API}/${type}`);\n  url.search = new URLSearchParams({\n    ...searchParams,\n    appid: API_KEY\n  });\n  return fetch(url).then(res => res.json());\n}\nfunction formatCurrentWeather(data) {\n  const {\n    coord: {\n      lat,\n      lon\n    },\n    main: {\n      temp,\n      feels_like,\n      temp_min,\n      temp_max,\n      humidity\n    },\n    name,\n    dt,\n    sys: {\n      country,\n      sunrise,\n      sunset\n    },\n    weather,\n    wind: {\n      speed\n    }\n  } = data;\n  const {\n    main: details,\n    icon\n  } = weather[0];\n  return {\n    lat,\n    lon,\n    temp,\n    feels_like,\n    temp_min,\n    temp_max,\n    humidity,\n    name,\n    dt,\n    country,\n    sunrise,\n    sunset,\n    details,\n    icon,\n    speed\n  };\n}\nasync function getFormattedDataWeather() {\n  const formattedCurrentWeather = await getWeatherData(\"weather\", searchParams).then(formatCurrentWeather);\n}","map":{"version":3,"names":["API_KEY","URL_API","getWeather","type","searchParams","url","URL","search","URLSearchParams","appid","fetch","then","res","json","formatCurrentWeather","data","coord","lat","lon","main","temp","feels_like","temp_min","temp_max","humidity","name","dt","sys","country","sunrise","sunset","weather","wind","speed","details","icon","getFormattedDataWeather","formattedCurrentWeather","getWeatherData"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/weather.js"],"sourcesContent":["const API_KEY = 'c065f555d4e19864fdc27e420f758663';\nconst URL_API = 'https://api.openweathermap.org/data/2.5/';\n\nexport function getWeather(type, searchParams) {\n    const url = new URL(`${URL_API}/${type}`);\n    url.search = new URLSearchParams({ ...searchParams, appid: API_KEY });\n\n    return fetch(url).then((res) => res.json());\n}\n\nfunction formatCurrentWeather(data) {\n    const {\n        coord: { lat, lon },\n        main: { temp, feels_like, temp_min, temp_max, humidity },\n        name,\n        dt,\n        sys: { country, sunrise, sunset },\n        weather,\n        wind: { speed },\n    } = data;\n\n    const { main: details, icon } = weather[0];\n\n    return {\n        lat,\n        lon,\n        temp,\n        feels_like,\n        temp_min,\n        temp_max,\n        humidity,\n        name,\n        dt,\n        country,\n        sunrise,\n        sunset,\n        details,\n        icon,\n        speed,\n    };\n}\n\nasync function getFormattedDataWeather() {\n    const formattedCurrentWeather = await getWeatherData(\n        \"weather\",\n        searchParams\n    ).then(formatCurrentWeather);\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAG,kCAAkC;AAClD,MAAMC,OAAO,GAAG,0CAA0C;AAE1D,OAAO,SAASC,UAAU,CAACC,IAAI,EAAEC,YAAY,EAAE;EAC3C,MAAMC,GAAG,GAAG,IAAIC,GAAG,CAAE,GAAEL,OAAQ,IAAGE,IAAK,EAAC,CAAC;EACzCE,GAAG,CAACE,MAAM,GAAG,IAAIC,eAAe,CAAC;IAAE,GAAGJ,YAAY;IAAEK,KAAK,EAAET;EAAQ,CAAC,CAAC;EAErE,OAAOU,KAAK,CAACL,GAAG,CAAC,CAACM,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC;AAC/C;AAEA,SAASC,oBAAoB,CAACC,IAAI,EAAE;EAChC,MAAM;IACFC,KAAK,EAAE;MAAEC,GAAG;MAAEC;IAAI,CAAC;IACnBC,IAAI,EAAE;MAAEC,IAAI;MAAEC,UAAU;MAAEC,QAAQ;MAAEC,QAAQ;MAAEC;IAAS,CAAC;IACxDC,IAAI;IACJC,EAAE;IACFC,GAAG,EAAE;MAAEC,OAAO;MAAEC,OAAO;MAAEC;IAAO,CAAC;IACjCC,OAAO;IACPC,IAAI,EAAE;MAAEC;IAAM;EAClB,CAAC,GAAGlB,IAAI;EAER,MAAM;IAAEI,IAAI,EAAEe,OAAO;IAAEC;EAAK,CAAC,GAAGJ,OAAO,CAAC,CAAC,CAAC;EAE1C,OAAO;IACHd,GAAG;IACHC,GAAG;IACHE,IAAI;IACJC,UAAU;IACVC,QAAQ;IACRC,QAAQ;IACRC,QAAQ;IACRC,IAAI;IACJC,EAAE;IACFE,OAAO;IACPC,OAAO;IACPC,MAAM;IACNI,OAAO;IACPC,IAAI;IACJF;EACJ,CAAC;AACL;AAEA,eAAeG,uBAAuB,GAAG;EACrC,MAAMC,uBAAuB,GAAG,MAAMC,cAAc,CAChD,SAAS,EACTlC,YAAY,CACf,CAACO,IAAI,CAACG,oBAAoB,CAAC;AAChC"},"metadata":{},"sourceType":"module"}