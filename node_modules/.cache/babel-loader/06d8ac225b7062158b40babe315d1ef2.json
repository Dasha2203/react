{"ast":null,"code":"var _jsxFileName = \"/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Main.module.scss';\nimport { Snow } from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport { CITIES } from \"../const/const\";\nimport { getFormattedDataWeather, getWeather } from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst Main = () => {\n  _s();\n  const [town, setTown] = useState(JSON.parse(localStorage.getItem('town')) || CITIES[0]);\n  const [weather, setWeather] = useState(null);\n  const [dailyWeather, setDailyWeather] = useState(null);\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        // setLat(position.coords.latitude)\n        // setLng(position.coords.longitude);\n        if (!localStorage.getItem('town')) {\n          setTown({\n            lat: position.coords.latitude,\n            lon: position.coords.longitude\n          });\n        }\n      });\n    }\n  }\n  useEffect(() => {\n    if (!town) return;\n    localStorage.setItem('town', JSON.stringify(town));\n  }, [town]);\n  async function fetchWeather() {\n    let res = await getFormattedDataWeather({\n      lat: town.lat,\n      lon: town.lon,\n      units: \"metric\",\n      exclude: 'hourly,minutely'\n    });\n    setWeather(res.current);\n    setDailyWeather(res.daily.slice(0, 3));\n  }\n  useEffect(() => {\n    if (!town) return;\n    fetchWeather();\n    window.onload = function () {\n      getLocation();\n    };\n  }, [town]);\n\n  // useEffect(()=> {\n  //     if (weather) {\n  //         console.log('effect weather', weather);\n  //     }\n  // },[weather])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'h-screen flex',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container px-4 mx-auto pt-5',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex gap-4',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: `${town.name === 'Minsk' ? 'active' : ''}`,\n          onClick: () => setTown(CITIES[0]),\n          children: \"Minsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: `${town.name === 'Moscow' ? 'active' : ''}`,\n          onClick: () => setTown(CITIES[1]),\n          children: \"Moscow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: `${town.name === 'Bratislava' ? 'active' : ''}`,\n          onClick: () => setTown(CITIES[2]),\n          children: \"Bratislava\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.block,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.city,\n          children: weather.city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: weather.date.dayLong\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weather.date.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.image,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: 'h-24 sm:mb-5',\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: 'fill-white h-full',\n              name: weather.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.degree,\n          children: [Math.round(weather.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), dailyWeather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.block,\n        children: dailyWeather.map((item, i) => /*#__PURE__*/_jsxDEV(DayWeather, {\n          day: item.date.dayShort,\n          className: 'w-1/4',\n          temp: item.temp,\n          icon: item.icon\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"iIfh63u0o1IgZrbyN+ERDOc1y98=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","styles","Snow","DayWeather","Button","CITIES","getFormattedDataWeather","getWeather","Icon","month","days","Main","town","setTown","JSON","parse","localStorage","getItem","weather","setWeather","dailyWeather","setDailyWeather","getLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","setItem","stringify","fetchWeather","res","units","exclude","current","daily","slice","window","onload","name","block","city","info","date","dayLong","image","icon","description","degree","Math","round","temp","map","item","i","dayShort"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './Main.module.scss';\nimport {Snow} from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport {CITIES} from \"../const/const\";\nimport {getFormattedDataWeather, getWeather} from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\n\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nconst Main = () => {\n    const [town, setTown] = useState(JSON.parse(localStorage.getItem('town')) || CITIES[0]);\n    const [weather, setWeather] = useState(null);\n    const [dailyWeather, setDailyWeather] = useState(null)\n\n\n    function getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                // setLat(position.coords.latitude)\n                // setLng(position.coords.longitude);\n                if (!localStorage.getItem('town')) {\n                    setTown({lat: position.coords.latitude, lon: position.coords.longitude})\n                }\n            })\n        }\n    }\n\n    useEffect(() => {\n        if (!town) return;\n\n        localStorage.setItem('town', JSON.stringify(town));\n    }, [town])\n\n\n\n    async function fetchWeather() {\n        let res = await getFormattedDataWeather({lat: town.lat, lon: town.lon, units: \"metric\", exclude: 'hourly,minutely'});\n        setWeather(res.current);\n        setDailyWeather(res.daily.slice(0,3));\n    }\n\n    useEffect(() => {\n        if (!town) return;\n        fetchWeather();\n\n\n        window.onload = function () {\n            getLocation();\n        }\n    }, [town])\n\n    // useEffect(()=> {\n    //     if (weather) {\n    //         console.log('effect weather', weather);\n    //     }\n    // },[weather])\n\n    return (\n        <div className={'h-screen flex'}>\n            <div className={'container px-4 mx-auto pt-5'}>\n                <div className={'flex gap-4'}>\n                    <Button className={`${town.name === 'Minsk' ? 'active' : ''}`} onClick={() => setTown(CITIES[0])}>\n                        Minsk\n                    </Button>\n                    <Button className={`${town.name === 'Moscow' ? 'active' : ''}`} onClick={() => setTown(CITIES[1])}>\n                        Moscow\n                    </Button>\n                    <Button className={`${town.name === 'Bratislava' ? 'active' : ''}`} onClick={() => setTown(CITIES[2])}>\n                        Bratislava\n                    </Button>\n                </div>\n                {\n                    weather && (\n                        <div className={styles.block}>\n\n                            <div className={styles.city}>\n                                {weather.city}\n                            </div>\n                            <div className={styles.info}>\n                                <p>{weather.date.dayLong}</p>\n                                <p>{weather.date.date}</p>\n                            </div>\n                            <div className={styles.image}>\n                                <div className={'h-24 sm:mb-5'}>\n                                    <Icon className={'fill-white h-full'} name={weather.icon}/>\n                                </div>\n                                <p>{weather.description}</p>\n                            </div>\n                            <div className={styles.degree}>\n                                {Math.round(weather.temp)}°\n                            </div>\n                        </div>\n                    )\n                }\n\n                {dailyWeather && (<div className={styles.block}>\n                    {\n                        dailyWeather.map((item, i) => (\n                            <DayWeather day={item.date.dayShort} className={'w-1/4'} temp={item.temp} icon={item.icon} key={i}/>\n                        ))\n                    }\n\n                </div>)}\n            </div>\n        </div>\n    );\n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}