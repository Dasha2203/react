{"ast":null,"code":"var _jsxFileName = \"/Users/darakorbut/Downloads/projects/weatherapp/src/context/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getDataCurrentWeather, getFormattedDataWeather } from \"../weather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  dailyWeather: null,\n  hourlyWeather: null,\n  weather: null,\n  fetchWeather: () => undefined,\n  fetchCurrentWeather: () => undefined,\n  loader: false,\n  error: ''\n};\nexport const Context = /*#__PURE__*/React.createContext(initialState);\nexport const ContextProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [weather, setWeather] = useState(null);\n  const [dailyWeather, setDailyWeather] = useState(null);\n  const [hourlyWeather, setHourlyWeather] = useState(null);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState('');\n  function saveWeather(data) {\n    setWeather(data.current);\n    setDailyWeather(data.daily.slice(0, 3));\n    setHourlyWeather(data.hourly);\n    setError('');\n    const {\n      city,\n      lat: latData,\n      lon: lonData\n    } = data.current;\n    localStorage.setItem('town', JSON.stringify({\n      town: city,\n      lat: latData,\n      lon: lonData\n    }));\n  }\n  async function fetchWeather(_ref2) {\n    let {\n      lat,\n      lon\n    } = _ref2;\n    setLoader(true);\n    try {\n      let res = await getFormattedDataWeather({\n        lat,\n        lon,\n        units: \"metric\",\n        exclude: 'minutely'\n      });\n      saveWeather(res);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoader(false);\n    }\n  }\n  async function fetchCurrentWeather(_ref3) {\n    let {\n      q\n    } = _ref3;\n    try {\n      let res = await getDataCurrentWeather({\n        q,\n        units: \"metric\"\n      });\n      saveWeather(res);\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoader(false);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: {\n      error,\n      loader,\n      weather,\n      setWeather,\n      dailyWeather,\n      setDailyWeather,\n      hourlyWeather,\n      setHourlyWeather,\n      fetchWeather,\n      fetchCurrentWeather\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(ContextProvider, \"XqSUDEl0PDylAUB7kO6lVjQJriQ=\");\n_c = ContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","useState","getDataCurrentWeather","getFormattedDataWeather","initialState","dailyWeather","hourlyWeather","weather","fetchWeather","undefined","fetchCurrentWeather","loader","error","Context","createContext","ContextProvider","children","setWeather","setDailyWeather","setHourlyWeather","setLoader","setError","saveWeather","data","current","daily","slice","hourly","city","lat","latData","lon","lonData","localStorage","setItem","JSON","stringify","town","res","units","exclude","err","message","q"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/context/index.jsx"],"sourcesContent":["import React, {useState} from 'react';\nimport {getDataCurrentWeather, getFormattedDataWeather} from \"../weather\";\n\nconst initialState = {\n    dailyWeather: null,\n    hourlyWeather: null,\n    weather: null,\n    fetchWeather: () => undefined,\n    fetchCurrentWeather: () => undefined,\n    loader: false,\n    error: ''\n}\n\nexport const Context = React.createContext(initialState);\n\nexport const ContextProvider = ({children}) => {\n    const [weather, setWeather] = useState(null);\n    const [dailyWeather, setDailyWeather] = useState(null);\n    const [hourlyWeather, setHourlyWeather] = useState(null);\n    const [loader, setLoader] = useState(false);\n    const [error, setError] = useState('');\n\n    function saveWeather(data) {\n        setWeather(data.current);\n        setDailyWeather(data.daily.slice(0,3));\n        setHourlyWeather(data.hourly);\n        setError('');\n\n        const {city, lat: latData, lon: lonData} = data.current;\n        localStorage.setItem('town', JSON.stringify({town: city, lat: latData, lon: lonData}));\n    }\n\n    async function fetchWeather({lat, lon}) {\n        setLoader(true);\n\n        try {\n            let res = await getFormattedDataWeather({lat, lon, units: \"metric\", exclude: 'minutely'});\n\n            saveWeather(res);\n        } catch(err) {\n            setError(err.message)\n        } finally {\n            setLoader(false);\n        }\n    }\n\n    async function fetchCurrentWeather({q}) {\n        try {\n            let res = await getDataCurrentWeather({q, units: \"metric\"});\n\n           saveWeather(res);\n        } catch(err) {\n            setError(err.message);\n        } finally {\n            setLoader(false);\n        }\n    }\n\n    return (\n        <Context.Provider value={{\n            error,\n            loader,\n            weather,\n            setWeather,\n            dailyWeather,\n            setDailyWeather,\n            hourlyWeather,\n            setHourlyWeather,\n            fetchWeather,\n            fetchCurrentWeather,\n        }}>\n            {children}\n        </Context.Provider>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}