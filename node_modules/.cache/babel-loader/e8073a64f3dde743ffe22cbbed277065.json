{"ast":null,"code":"var _jsxFileName = \"/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Main.module.scss';\nimport { Snow } from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport { CITIES } from \"../const/const\";\nimport { getFormattedDataWeather, getWeather } from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst Main = () => {\n  _s();\n  const [town, setTown] = useState(CITIES[0]);\n  const [weather, setWeather] = useState(null);\n  const [timeZone, setTimeZone] = useState(0);\n  const [temp, setTemp] = useState(0);\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [day, setDay] = useState(0);\n  const [daysWeather, setDaysWeather] = useState([]);\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        // setLat(position.coords.latitude)\n        // setLng(position.coords.longitude);\n      });\n    }\n  }\n  function getTime(date) {\n    let d = new Date(date);\n    // let day = date.getDay();\n\n    return d.toLocaleDateString(\"RU-ru\");\n  }\n  async function fetchWeather() {\n    let res = await getFormattedDataWeather({\n      q: 'Minsk',\n      units: \"metric\"\n    });\n    setWeather(res.formattedCurrentWeather);\n  }\n  useEffect(() => {\n    fetchWeather();\n    window.onload = function () {\n      getLocation();\n    };\n  }, [town]);\n  useEffect(() => {\n    if (weather) {\n      console.log('effect weather', weather);\n    }\n  }, [weather]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'h-screen flex',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container px-4 mx-auto pt-5',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex gap-4',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[0]),\n          children: \"Minsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[1]),\n          children: \"Moscow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[2]),\n          children: \"Bratislava\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.block,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.city,\n          children: weather.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.info,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: getTime(weather.date)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.image,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              className: 'fill-blue-500 w-9',\n              name: weather.icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: weather.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.degree,\n          children: [Math.round(weather.temp), \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.block,\n        children: daysWeather.map((item, i) => /*#__PURE__*/_jsxDEV(DayWeather, {\n          day: getTime(timeZone, item.dt).day\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"vXJ387qUmZyFsmLu4bQ8vSD3sts=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","styles","Snow","DayWeather","Button","CITIES","getFormattedDataWeather","getWeather","Icon","month","days","Main","town","setTown","weather","setWeather","timeZone","setTimeZone","temp","setTemp","description","setDescription","date","setDate","day","setDay","daysWeather","setDaysWeather","getLocation","navigator","geolocation","getCurrentPosition","position","getTime","d","Date","toLocaleDateString","fetchWeather","res","q","units","formattedCurrentWeather","window","onload","console","log","block","city","name","info","image","icon","degree","Math","round","map","item","i","dt"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './Main.module.scss';\nimport {Snow} from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport {CITIES} from \"../const/const\";\nimport {getFormattedDataWeather, getWeather} from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\n\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nconst Main = () => {\n    const [town, setTown] = useState(CITIES[0]);\n    const [weather, setWeather] = useState(null);\n    const [timeZone, setTimeZone] = useState(0);\n    const [temp, setTemp] = useState(0);\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState('')\n    const [day, setDay] = useState(0);\n    const [daysWeather, setDaysWeather] = useState([]);\n\n\n    function getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                // setLat(position.coords.latitude)\n                // setLng(position.coords.longitude);\n            })\n        }\n    }\n\n    function getTime(date) {\n        let d = new Date(date);\n        // let day = date.getDay();\n\n        return d.toLocaleDateString(\"RU-ru\")\n\n    }\n\n    async function fetchWeather() {\n        let res = await getFormattedDataWeather({q: 'Minsk', units: \"metric\"});\n        setWeather(res.formattedCurrentWeather);\n    }\n\n    useEffect(() => {\n        fetchWeather();\n\n\n        window.onload = function () {\n            getLocation();\n        }\n    }, [town])\n\n    useEffect(()=> {\n        if (weather) {\n            console.log('effect weather', weather);\n        }\n    },[weather])\n\n    return (\n        <div className={'h-screen flex'}>\n            <div className={'container px-4 mx-auto pt-5'}>\n                <div className={'flex gap-4'}>\n                    <Button onClick={() => setTown(CITIES[0])}>\n                        Minsk\n                    </Button>\n                    <Button onClick={() => setTown(CITIES[1])}>\n                        Moscow\n                    </Button>\n                    <Button onClick={() => setTown(CITIES[2])}>\n                        Bratislava\n                    </Button>\n                </div>\n                {\n                    weather && (\n                        <div className={styles.block}>\n\n                            <div className={styles.city}>\n                                {weather.name}\n                            </div>\n                            <div className={styles.info}>\n                                <p>{day}</p>\n                                <p>{getTime(weather.date)}</p>\n                            </div>\n                            <div className={styles.image}>\n                                <div>\n                                    <Icon className={'fill-blue-500 w-9'} name={weather.icon}/>\n                                </div>\n                                <p>{weather.description}</p>\n                            </div>\n                            <div className={styles.degree}>\n                                {Math.round(weather.temp)}°\n                            </div>\n                        </div>\n                    )\n                }\n\n                <div className={styles.block}>\n                    {\n                        daysWeather.map((item, i) => (\n                            <DayWeather day={getTime(timeZone, item.dt).day} key={i}/>\n                        ))\n                    }\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}