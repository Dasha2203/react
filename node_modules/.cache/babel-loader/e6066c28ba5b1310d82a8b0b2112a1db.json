{"ast":null,"code":"var _jsxFileName = \"/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styles from './Main.module.scss';\nimport { Snow } from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport { CITIES } from \"../const/const\";\nimport { getFormattedDataWeather, getWeather } from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\nconst Main = () => {\n  _s();\n  const [town, setTown] = useState(CITIES[0]);\n  // const [weather, setWeather] = useState(null);\n  const [timeZone, setTimeZone] = useState(0);\n  const [temp, setTemp] = useState(0);\n  const [description, setDescription] = useState('');\n  const [date, setDate] = useState('');\n  const [day, setDay] = useState(0);\n  const [daysWeather, setDaysWeather] = useState([]);\n  function getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        // setLat(position.coords.latitude)\n        // setLng(position.coords.longitude);\n      });\n    }\n  }\n  async function fetchWeather() {\n    let res = await getFormattedDataWeather({\n      lat: town.lat,\n      lon: town.lon,\n      units: \"metric\",\n      exclude: 'hourly'\n    });\n    // setWeather(res.formattedCurrentWeather);\n  }\n\n  useEffect(() => {\n    if (!town) return;\n    fetchWeather();\n    window.onload = function () {\n      getLocation();\n    };\n  }, [town]);\n\n  // useEffect(()=> {\n  //     if (weather) {\n  //         console.log('effect weather', weather);\n  //     }\n  // },[weather])\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: 'h-screen flex',\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'container px-4 mx-auto pt-5',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'flex gap-4',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[0]),\n          children: \"Minsk\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[1]),\n          children: \"Moscow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setTown(CITIES[2]),\n          children: \"Bratislava\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(Main, \"AoW5GrPcy2wlItYsmbLoFn1fpjw=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","styles","Snow","DayWeather","Button","CITIES","getFormattedDataWeather","getWeather","Icon","month","days","Main","town","setTown","timeZone","setTimeZone","temp","setTemp","description","setDescription","date","setDate","day","setDay","daysWeather","setDaysWeather","getLocation","navigator","geolocation","getCurrentPosition","position","fetchWeather","res","lat","lon","units","exclude","window","onload"],"sources":["/Users/darakorbut/Downloads/projects/weatherapp/src/Pages/Main.jsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport styles from './Main.module.scss';\nimport {Snow} from \"../assets/icons\";\nimport DayWeather from \"../components/DayWeather/DayWeather\";\nimport Button from \"../components/Button/Button\";\nimport {CITIES} from \"../const/const\";\nimport {getFormattedDataWeather, getWeather} from \"../weather\";\nimport Icon from \"../components/Icon/Icon\";\n\nconst month = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\",\n    \"August\", \"September\", \"October\", \"November\", \"December\"];\nvar days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\nconst Main = () => {\n    const [town, setTown] = useState(CITIES[0]);\n    // const [weather, setWeather] = useState(null);\n    const [timeZone, setTimeZone] = useState(0);\n    const [temp, setTemp] = useState(0);\n    const [description, setDescription] = useState('');\n    const [date, setDate] = useState('')\n    const [day, setDay] = useState(0);\n    const [daysWeather, setDaysWeather] = useState([]);\n\n\n    function getLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((position) => {\n                // setLat(position.coords.latitude)\n                // setLng(position.coords.longitude);\n            })\n        }\n    }\n\n\n\n    async function fetchWeather() {\n        let res = await getFormattedDataWeather({lat: town.lat, lon: town.lon, units: \"metric\", exclude: 'hourly'});\n        // setWeather(res.formattedCurrentWeather);\n    }\n\n    useEffect(() => {\n        if (!town) return;\n        fetchWeather();\n\n\n        window.onload = function () {\n            getLocation();\n        }\n    }, [town])\n\n    // useEffect(()=> {\n    //     if (weather) {\n    //         console.log('effect weather', weather);\n    //     }\n    // },[weather])\n\n    return (\n        <div className={'h-screen flex'}>\n            <div className={'container px-4 mx-auto pt-5'}>\n                <div className={'flex gap-4'}>\n                    <Button onClick={() => setTown(CITIES[0])}>\n                        Minsk\n                    </Button>\n                    <Button onClick={() => setTown(CITIES[1])}>\n                        Moscow\n                    </Button>\n                    <Button onClick={() => setTown(CITIES[2])}>\n                        Bratislava\n                    </Button>\n                </div>\n                {/*{*/}\n                {/*    weather && (*/}\n                {/*        <div className={styles.block}>*/}\n\n                {/*            <div className={styles.city}>*/}\n                {/*                {weather.name}*/}\n                {/*            </div>*/}\n                {/*            <div className={styles.info}>*/}\n                {/*                <p>{weather.date.day}</p>*/}\n                {/*                <p>{weather.date.date}</p>*/}\n                {/*            </div>*/}\n                {/*            <div className={styles.image}>*/}\n                {/*                <div className={'h-24 mb-5'}>*/}\n                {/*                    <Icon className={'fill-white h-full'} name={weather.icon}/>*/}\n                {/*                </div>*/}\n                {/*                <p>{weather.description}</p>*/}\n                {/*            </div>*/}\n                {/*            <div className={styles.degree}>*/}\n                {/*                {Math.round(weather.temp)}Â°*/}\n                {/*            </div>*/}\n                {/*        </div>*/}\n                {/*    )*/}\n                {/*}*/}\n\n                {/*<div className={styles.block}>*/}\n                {/*    {*/}\n                {/*        daysWeather.map((item, i) => (*/}\n                {/*            <DayWeather day={getTime(timeZone, item.dt).day} key={i}/>*/}\n                {/*        ))*/}\n                {/*    }*/}\n\n                {/*</div>*/}\n            </div>\n        </div>\n    );\n};\n\nexport default Main;"],"mappings":"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"},"metadata":{},"sourceType":"module"}